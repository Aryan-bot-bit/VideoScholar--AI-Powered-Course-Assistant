{"chunks": [{"number": "p7.mp4", "title": "64 #p7.mp4", "start": 0.0, "end": 3.0, "text": " Hi everyone, in this chapter we are going to start about authentication and authorization."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 3.0, "end": 6.0, "text": " These are two very important concepts. We have to learn these concepts so that we can deal with users."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 6.0, "end": 9.0, "text": " We have used the listing model and reviews model in the website we have made so far."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 9.0, "end": 12.0, "text": " We will build another new model in this chapter that will represent our user."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 12.0, "end": 15.0, "text": " In fact, all the concepts we are reading in authentication and authorization can be used to make our other websites."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 15.0, "end": 19.0, "text": " For example, we make an e-commerce website tomorrow where we want to register a user or sign up."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 19.0, "end": 22.0, "text": " Or we make another type of website where the user logs in and sign up."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 22.0, "end": 26.0, "text": " So whenever the user logs in and sign up register, then the concepts of authentication and authorization are very useful."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 26.0, "end": 29.0, "text": " So let's understand the difference between authentication and authorization."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 29.0, "end": 32.0, "text": " Authentication means the process of verifying who someone is."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 32.0, "end": 35.0, "text": " It means verifying that the person is the person."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 35.0, "end": 37.0, "text": " It means that we use our phone."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 37.0, "end": 42.0, "text": " Now our phone has a face scanning or a password or fingerprint scanning."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 42.0, "end": 46.0, "text": " So all these methods of authentication mean verifying that this is the person."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 46.0, "end": 49.0, "text": " So basically, it means to register someone and log in."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 49.0, "end": 53.0, "text": " So our sign up and login part comes under authentication."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 53.0, "end": 56.0, "text": " And we have another term related to authentication."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 56.0, "end": 59.0, "text": " Authorization is the process of verifying what specific applications, files and data a user has access to."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 59.0, "end": 62.0, "text": " So authentication is identifying that this person was registered on my website and then he can log in."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 62.0, "end": 64.0, "text": " And to log in, he will have to enter the password in the correct user."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 64.0, "end": 65.0, "text": " This is authentication."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 65.0, "end": 68.0, "text": " It is authorization that once that person has logged in, then he will be able to access my website."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 68.0, "end": 71.0, "text": " What are the applications on the website that he can use."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 71.0, "end": 75.0, "text": " For example, if we make an account on Instagram, then we can delete that post only."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 75.0, "end": 77.0, "text": " Or we can go under some other post and comment."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 77.0, "end": 80.0, "text": " So no one can edit that comment. We can only edit that comment because we have that access."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 80.0, "end": 82.0, "text": " So authorization means what all things we have access to on any website."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 82.0, "end": 84.0, "text": " For example, we have created reviews in our website."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 84.0, "end": 86.0, "text": " Anyone can delete reviews for now."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 86.0, "end": 88.0, "text": " But when we add authorization, then the user will be able to delete the reviews only."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 88.0, "end": 89.0, "text": " The one who has created that review."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 89.0, "end": 93.0, "text": " So this is the difference between a website that has authorization and a website that has no authorization."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 93.0, "end": 96.0, "text": " And generally, all our good projects, websites are developed at a good level."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 96.0, "end": 99.0, "text": " So whenever there are users, then both the concepts of authentication and authorization are used and implemented."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 99.0, "end": 102.0, "text": " Now before authentication and authorization, there are some basic concepts that we should have an idea of."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 102.0, "end": 103.0, "text": " Which fall under authentication."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 106.0, "end": 108.0, "text": " The first concept is about storing passwords."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 108.0, "end": 110.0, "text": " For example, if we sign up on a website, then it means to register."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 110.0, "end": 112.0, "text": " When we sign up, we have to give some basic things to the website."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 112.0, "end": 113.0, "text": " We can tell the website our email."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 113.0, "end": 115.0, "text": " We can set up a username for ourselves."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 115.0, "end": 117.0, "text": " If we make an account on the internet, then we have to set up a username and password."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 117.0, "end": 119.0, "text": " Or similar things have to be set up on Instagram or Facebook."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 119.0, "end": 121.0, "text": " So these are basic things that we should have an email, username and password."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 121.0, "end": 123.0, "text": " Now we can take these three things with the help of some form."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 123.0, "end": 126.0, "text": " And when we store these three things in our database for a specific user."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 126.0, "end": 128.0, "text": " So we can normally store the email and the username."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 128.0, "end": 131.0, "text": " But we never store the password in any database as it is."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 131.0, "end": 133.0, "text": " So this is a very important thing that you have to remember as a developer."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 133.0, "end": 134.0, "text": " That we never store the passwords as it is."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 134.0, "end": 135.0, "text": " We store their hash form."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 135.0, "end": 137.0, "text": " Now what is the problem in storing the password as it is?"}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 137.0, "end": 139.0, "text": " The first problem is that if your database is hacked."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 143.0, "end": 144.0, "text": " Or if your data is leaked."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 144.0, "end": 145.0, "text": " Then in that case, everyone will know."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 146.0, "end": 148.0, "text": " That what password this user has for your website."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 148.0, "end": 150.0, "text": " So anyone can go and log in on that website."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 150.0, "end": 152.0, "text": " That means the app or website or whatever product you have made."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 152.0, "end": 154.0, "text": " If there is any sensitive information in it, then it will leak."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 154.0, "end": 156.0, "text": " For example, if you make a website for banking."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 156.0, "end": 157.0, "text": " And you register users on it."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 157.0, "end": 159.0, "text": " And there you save your password as it is."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 159.0, "end": 160.0, "text": " So if that data is ever."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 162.0, "end": 163.0, "text": " Leaks, that data gets hacked."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 163.0, "end": 165.0, "text": " So in that case, the hackers will have the password as it is."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 165.0, "end": 167.0, "text": " And the bank will be able to do all the transactions on your platform."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 167.0, "end": 169.0, "text": " The second disadvantage is that generally."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 169.0, "end": 170.0, "text": " The normal users."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 170.0, "end": 171.0, "text": " If we also."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 173.0, "end": 175.0, "text": " For example, we often use the same password on multiple websites."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 175.0, "end": 177.0, "text": " And in this case, if the password of one website."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 177.0, "end": 179.0, "text": " Leaks, that means everyone knows that this is the password of this website."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 179.0, "end": 181.0, "text": " So generally, the chances of the account being hacked on the other website of that person."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 181.0, "end": 183.0, "text": " Because generally, people use the same password on multiple websites."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 183.0, "end": 185.0, "text": " So that's why whenever we are building a website on Azure developer."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 185.0, "end": 186.0, "text": " We are registering users on it."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 186.0, "end": 187.0, "text": " So we will not save our password as it is."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 187.0, "end": 189.0, "text": " For example, my password is hello world."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 189.0, "end": 191.0, "text": " So this password will never be saved as it is like hello world."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 191.0, "end": 192.0, "text": " We change the form of this password first."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 192.0, "end": 194.0, "text": " That means we will do it in some other format."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 194.0, "end": 196.0, "text": " And generally, this form is called hashed form."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 196.0, "end": 197.0, "text": " Now what does hashed form mean?"}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 197.0, "end": 198.0, "text": " When we talk about programming."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 198.0, "end": 199.0, "text": " We are not just talking about Node.JS."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 199.0, "end": 201.0, "text": " If you build your backend in Python."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 203.0, "end": 204.0, "text": " You are also developing an app."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 204.0, "end": 205.0, "text": " You are coding Java."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 205.0, "end": 206.0, "text": " You are coding in some other technology."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 206.0, "end": 207.0, "text": " So whenever you have to store passwords."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 207.0, "end": 208.0, "text": " So we use our hashing function."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 208.0, "end": 210.0, "text": " The hashing function basically takes your password."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 210.0, "end": 211.0, "text": " And changes its form."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 211.0, "end": 212.0, "text": " So here, for example, we take hello world."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 212.0, "end": 213.0, "text": " Hello world, we have stored it like a password."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 213.0, "end": 215.0, "text": " But it will not be stored directly in the database like hello world."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 215.0, "end": 216.0, "text": " First, this will be given to some hashing function."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 216.0, "end": 218.0, "text": " And after that, this hashing function will change its form."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 218.0, "end": 220.0, "text": " It will convert it into this unreadable string."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 220.0, "end": 222.0, "text": " So this unreadable string is called hashed form."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 222.0, "end": 224.0, "text": " So the hashing function is a function that takes our password in the input."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 224.0, "end": 226.0, "text": " And gives us such an unrecognizable string in the output."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 226.0, "end": 228.0, "text": " Which we cannot remove our password."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 228.0, "end": 230.0, "text": " So this string has such a strong function."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 230.0, "end": 232.0, "text": " That you want to remove hello world from this string."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 232.0, "end": 233.0, "text": " So removing that will be very impractical."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 233.0, "end": 234.0, "text": " So what exactly happens?"}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 234.0, "end": 236.0, "text": " Exactly what happens is that if any of our users come."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 236.0, "end": 237.0, "text": " Let's suppose a user entered an email for himself."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 237.0, "end": 238.0, "text": " It can be abc.gmail.com."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 238.0, "end": 240.0, "text": " After that, he set a username for himself."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 240.0, "end": 241.0, "text": " We can have similar names in the username."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 241.0, "end": 242.0, "text": " Let's suppose their username is abc."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 242.0, "end": 243.0, "text": " After that, he set some password."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 243.0, "end": 245.0, "text": " And in the password, he set abc password."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 245.0, "end": 246.0, "text": " Or password."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 246.0, "end": 247.0, "text": " He set some password like this."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 247.0, "end": 248.0, "text": " So what will the hashing function do?"}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 248.0, "end": 250.0, "text": " First of all, the hashing function will change it into an unrecognizable form."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 250.0, "end": 251.0, "text": " That is, some string of this kind will come."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 251.0, "end": 253.0, "text": " Let's call this string one."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 253.0, "end": 254.0, "text": " Here I have written string one."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 254.0, "end": 256.0, "text": " But this will be some long unrecognizable string."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 256.0, "end": 260.0, "text": " Now this string will finally go and store in the database."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 260.0, "end": 262.0, "text": " So when we store things in the database."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 262.0, "end": 264.0, "text": " Let's suppose this is our database."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 264.0, "end": 265.0, "text": " So in the database."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 268.0, "end": 269.0, "text": " Email will be stored as usual."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 269.0, "end": 270.0, "text": " abc.gmail.com"}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 271.0, "end": 272.0, "text": " Username will be stored like abc."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 272.0, "end": 274.0, "text": " But instead of password here, our string will be stored."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 274.0, "end": 275.0, "text": " Not that our original password which was abc password."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 275.0, "end": 277.0, "text": " If another user comes, then the string will be stored for him too."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 277.0, "end": 278.0, "text": " So that the string will be stored."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 278.0, "end": 279.0, "text": " Not their original password."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 279.0, "end": 280.0, "text": " Now this is done after signing up."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 280.0, "end": 281.0, "text": " But when the user wants to log in."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 281.0, "end": 283.0, "text": " The user does not know that string one or string two is stored in our database."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 283.0, "end": 284.0, "text": " He knows that I played this website."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 284.0, "end": 285.0, "text": " I had set my abc password."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 285.0, "end": 286.0, "text": " So whenever the user logs in."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 286.0, "end": 287.0, "text": " Whenever the user logs in."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 287.0, "end": 289.0, "text": " For example, he has to enter his username and password."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 289.0, "end": 290.0, "text": " So when the user enters username."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 290.0, "end": 291.0, "text": " The user knows that I set abc."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 291.0, "end": 292.0, "text": " I will enter abc."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 292.0, "end": 294.0, "text": " He also knows that I set abc password in the password."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 294.0, "end": 295.0, "text": " So he will enter this string."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 295.0, "end": 297.0, "text": " Now when the user enters the password during the login."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 297.0, "end": 299.0, "text": " So how will the server check that this username and password are correct?"}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 299.0, "end": 300.0, "text": " So what does the server do?"}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 300.0, "end": 302.0, "text": " It passes the same value in the same hashing function again."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 302.0, "end": 304.0, "text": " And when the same value is passed in the hashing function."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 304.0, "end": 305.0, "text": " So whenever the input is same."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 305.0, "end": 306.0, "text": " The output is also the same."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 306.0, "end": 307.0, "text": " Means if you put abc password in the hashing function."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 307.0, "end": 308.0, "text": " Then always output will have string one."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 308.0, "end": 309.0, "text": " So when the password is logged in."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 309.0, "end": 311.0, "text": " And we have put abc password in the hashing function."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 311.0, "end": 312.0, "text": " So what will it do?"}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 312.0, "end": 313.0, "text": " It will give us string one."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 313.0, "end": 314.0, "text": " And whatever output comes."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 314.0, "end": 315.0, "text": " Let's suppose our output is string one."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 315.0, "end": 317.0, "text": " So this string one will be matched with the string one saved during the sign up."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 317.0, "end": 318.0, "text": " And when both the strings match."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 318.0, "end": 319.0, "text": " It means that this user had already registered."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 319.0, "end": 320.0, "text": " So now logging will be allowed for this user."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 320.0, "end": 321.0, "text": " But if he only entered abc."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 321.0, "end": 322.0, "text": " Password missed."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 322.0, "end": 323.0, "text": " So this is a different string."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 323.0, "end": 324.0, "text": " This is a different password."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 324.0, "end": 325.0, "text": " And for this different password."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 325.0, "end": 326.0, "text": " What will the hashing function give?"}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 327.0, "end": 328.0, "text": " That."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 328.0, "end": 329.0, "text": " So we will know that a string will not be matched."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 329.0, "end": 330.0, "text": " So we will know that password is not allowed to log in."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 330.0, "end": 331.0, "text": " So this is how our sign up and logging works at a high level."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 331.0, "end": 332.0, "text": " How does sign up and logging work?"}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 332.0, "end": 333.0, "text": " We say that there are multiple things at the time of signing."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 333.0, "end": 334.0, "text": " Password is not as if we are not going to do."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 334.0, "end": 335.0, "text": " Password goes through our hashing function."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 335.0, "end": 336.0, "text": " And the output hashing function also gives us the output."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 336.0, "end": 337.0, "text": " And when we come to log in."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 337.0, "end": 338.0, "text": " Whatever password."}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 338.0, "end": 340.0, "text": " So we don't do it, password goes through our hashing function and"}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 340.0, "end": 342.0, "text": " the output hashing function gives the output our data"}, {"number": "p7.mp4", "title": "64 #p7.mp4", "start": 342.0, "end": 344.0, "text": " When we come to login whatever password"}], "text": " Hi everyone, in this chapter we are going to start about authentication and authorization. These are two very important concepts. We have to learn these concepts so that we can deal with users. We have used the listing model and reviews model in the website we have made so far. We will build another new model in this chapter that will represent our user. In fact, all the concepts we are reading in authentication and authorization can be used to make our other websites. For example, we make an e-commerce website tomorrow where we want to register a user or sign up. Or we make another type of website where the user logs in and sign up. So whenever the user logs in and sign up register, then the concepts of authentication and authorization are very useful. So let's understand the difference between authentication and authorization. Authentication means the process of verifying who someone is. It means verifying that the person is the person. It means that we use our phone. Now our phone has a face scanning or a password or fingerprint scanning. So all these methods of authentication mean verifying that this is the person. So basically, it means to register someone and log in. So our sign up and login part comes under authentication. And we have another term related to authentication. Authorization is the process of verifying what specific applications, files and data a user has access to. So authentication is identifying that this person was registered on my website and then he can log in. And to log in, he will have to enter the password in the correct user. This is authentication. It is authorization that once that person has logged in, then he will be able to access my website. What are the applications on the website that he can use. For example, if we make an account on Instagram, then we can delete that post only. Or we can go under some other post and comment. So no one can edit that comment. We can only edit that comment because we have that access. So authorization means what all things we have access to on any website. For example, we have created reviews in our website. Anyone can delete reviews for now. But when we add authorization, then the user will be able to delete the reviews only. The one who has created that review. So this is the difference between a website that has authorization and a website that has no authorization. And generally, all our good projects, websites are developed at a good level. So whenever there are users, then both the concepts of authentication and authorization are used and implemented. Now before authentication and authorization, there are some basic concepts that we should have an idea of. Which fall under authentication. The first concept is about storing passwords. For example, if we sign up on a website, then it means to register. When we sign up, we have to give some basic things to the website. We can tell the website our email. We can set up a username for ourselves. If we make an account on the internet, then we have to set up a username and password. Or similar things have to be set up on Instagram or Facebook. So these are basic things that we should have an email, username and password. Now we can take these three things with the help of some form. And when we store these three things in our database for a specific user. So we can normally store the email and the username. But we never store the password in any database as it is. So this is a very important thing that you have to remember as a developer. That we never store the passwords as it is. We store their hash form. Now what is the problem in storing the password as it is? The first problem is that if your database is hacked. Or if your data is leaked. Then in that case, everyone will know. That what password this user has for your website. So anyone can go and log in on that website. That means the app or website or whatever product you have made. If there is any sensitive information in it, then it will leak. For example, if you make a website for banking. And you register users on it. And there you save your password as it is. So if that data is ever. Leaks, that data gets hacked. So in that case, the hackers will have the password as it is. And the bank will be able to do all the transactions on your platform. The second disadvantage is that generally. The normal users. If we also. For example, we often use the same password on multiple websites. And in this case, if the password of one website. Leaks, that means everyone knows that this is the password of this website. So generally, the chances of the account being hacked on the other website of that person. Because generally, people use the same password on multiple websites. So that's why whenever we are building a website on Azure developer. We are registering users on it. So we will not save our password as it is. For example, my password is hello world. So this password will never be saved as it is like hello world. We change the form of this password first. That means we will do it in some other format. And generally, this form is called hashed form. Now what does hashed form mean? When we talk about programming. We are not just talking about Node.JS. If you build your backend in Python. You are also developing an app. You are coding Java. You are coding in some other technology. So whenever you have to store passwords. So we use our hashing function. The hashing function basically takes your password. And changes its form. So here, for example, we take hello world. Hello world, we have stored it like a password. But it will not be stored directly in the database like hello world. First, this will be given to some hashing function. And after that, this hashing function will change its form. It will convert it into this unreadable string. So this unreadable string is called hashed form. So the hashing function is a function that takes our password in the input. And gives us such an unrecognizable string in the output. Which we cannot remove our password. So this string has such a strong function. That you want to remove hello world from this string. So removing that will be very impractical. So what exactly happens? Exactly what happens is that if any of our users come. Let's suppose a user entered an email for himself. It can be abc.gmail.com. After that, he set a username for himself. We can have similar names in the username. Let's suppose their username is abc. After that, he set some password. And in the password, he set abc password. Or password. He set some password like this. So what will the hashing function do? First of all, the hashing function will change it into an unrecognizable form. That is, some string of this kind will come. Let's call this string one. Here I have written string one. But this will be some long unrecognizable string. Now this string will finally go and store in the database. So when we store things in the database. Let's suppose this is our database. So in the database. Email will be stored as usual. abc.gmail.com Username will be stored like abc. But instead of password here, our string will be stored. Not that our original password which was abc password. If another user comes, then the string will be stored for him too. So that the string will be stored. Not their original password. Now this is done after signing up. But when the user wants to log in. The user does not know that string one or string two is stored in our database. He knows that I played this website. I had set my abc password. So whenever the user logs in. Whenever the user logs in. For example, he has to enter his username and password. So when the user enters username. The user knows that I set abc. I will enter abc. He also knows that I set abc password in the password. So he will enter this string. Now when the user enters the password during the login. So how will the server check that this username and password are correct? So what does the server do? It passes the same value in the same hashing function again. And when the same value is passed in the hashing function. So whenever the input is same. The output is also the same. Means if you put abc password in the hashing function. Then always output will have string one. So when the password is logged in. And we have put abc password in the hashing function. So what will it do? It will give us string one. And whatever output comes. Let's suppose our output is string one. So this string one will be matched with the string one saved during the sign up. And when both the strings match. It means that this user had already registered. So now logging will be allowed for this user. But if he only entered abc. Password missed. So this is a different string. This is a different password. And for this different password. What will the hashing function give? That. So we will know that a string will not be matched. So we will know that password is not allowed to log in. So this is how our sign up and logging works at a high level. How does sign up and logging work? We say that there are multiple things at the time of signing. Password is not as if we are not going to do. Password goes through our hashing function. And the output hashing function also gives us the output. And when we come to log in. Whatever password. So we don't do it, password goes through our hashing function and the output hashing function gives the output our data When we come to login whatever password"}